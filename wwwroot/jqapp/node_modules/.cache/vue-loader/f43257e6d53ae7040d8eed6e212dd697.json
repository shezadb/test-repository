{"remainingRequest":"C:\\Users\\bshah\\jqapp\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\bshah\\jqapp\\src\\components\\kpvItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\bshah\\jqapp\\src\\components\\kpvItem.vue","mtime":1671164074931},{"path":"C:\\Users\\bshah\\jqapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\bshah\\jqapp\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\bshah\\jqapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\bshah\\jqapp\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport JqxButton from 'jqwidgets-scripts/jqwidgets-vue/vue_jqxbuttons.vue';\r\n import JqxGrid from \"jqwidgets-scripts/jqwidgets-vue/vue_jqxgrid.vue\";\r\nexport default {\r\n  data() {\r\n    return {\r\n        kpiDataItem: [],\r\n       dataAdapter: new jqx.dataAdapter(this.source,{\r\n    loadComplete: function (data) {\r\n        console.log('data is loaded.')\r\n       // data = data;\r\n         console.log(data); \r\n         \r\n       return data;   \r\n    },   \r\n    loadError: function (xhr, status, error) {\r\n        console.log('data is not loaded.')\r\n    }}),\r\n        columns: [\r\n          { text: 'Tag Name', datafield: 'tagName', width: 140, validation: (cell, value) => {\r\n               {\r\n                return { result: true, message: '' };\r\n              }\r\n              return true;}, },\r\n          { text: 'CurrentValue', datafield: 'currentValue', width: 100 , validation: (cell, value) => {\r\n               if (value < 0 || value > 150) {\r\n                  return { result: false, message: 'Value should be in the 0-150 interval' };\r\n                }\r\n                return true;},},\r\n          { text: 'Monday', datafield: 'monday', width: 100, validation: (cell, value) => {\r\n              if (value < 0 || value > 150) {\r\n                return { result: false, message: 'Value should be in the 0-150 interval' };\r\n              }\r\n              return true;},},\r\n          { text: 'Tuesday', datafield: 'tuesday', width: 100, validation: (cell, value) => {\r\n              if (value < 0 || value > 150) {\r\n                  return { result: false, message: 'Value should be in the 0-150 interval' };\r\n                }\r\n                return true;\r\n              },\r\n          },\r\n          { text: 'Wednesday', datafield: 'wednesday', width: 100, validation: (cell, value) => {\r\n              if (value < 0 || value > 150) {\r\n                return { result: false, message: 'Value should be in the 0-150 interval' };\r\n              }\r\n              return true;},},\r\n          { text: 'Thursday', datafield: 'thursday', width: 100, validation: (cell, value) => {\r\n              if (value < 0 || value > 150) {\r\n                return { result: false, message: 'Value should be in the 0-150 interval' };\r\n              }\r\n              return true;},},\r\n          { text: 'Friday', datafield: 'friday', width: 100, validation: (cell, value) => {\r\n              if (value < 0 || value > 150) {\r\n                return { result: false, message: 'Value should be in the 0-150 interval' };\r\n              }\r\n              return true;},},\r\n          { text: 'Saturday', datafield: 'saturday', width: 100, validation: (cell, value) => {\r\n              if (value < 0 || value > 150) {\r\n                return { result: false, message: 'Value should be in the 0-150 interval' };\r\n              }\r\n              return true;},},\r\n          { text: 'Sunday', datafield: 'sunday', width: 100, validation: (cell, value) => {\r\n              if (value < 0 || value > 150) {\r\n                return { result: false, message: 'Value should be in the 0-150 interval' };\r\n              }\r\n              return true;},},\r\n        ],\r\n    }\r\n  },\r\n  \r\n  async beforeCreate() {\r\n\r\n     // this. source1 =  this.loadItems();\r\n      this.source = {      \r\n        datatype: 'json',\r\n        datafields: [\r\n          { name: 'tagName', type: 'string' },\r\n          { name: 'currentValue', type: 'float' },\r\n          { name: 'monday', type: 'float' },\r\n          { name: 'tuesday', type: 'float' },\r\n          { name: 'wednesday', type: 'float' },\r\n          { name: 'thursday', type: 'float'},\r\n          { name: 'friday', type: 'float'},\r\n          { name: 'saturday', type: 'float'},\r\n          { name: 'sunday', type: 'float'}\r\n        ],\r\n        url: 'http://localhost:5000/api/kpvitem',\r\n       // root: 'data',\r\n\r\n        contenttype: 'application/json',\r\n       // root: 'data',\r\n       //type: 'GET',\r\n        \r\n      };\r\n    },\r\n   components: {\r\n      JqxGrid,JqxButton,\r\n    },\r\n    methods: {\r\n        onCellendedit: function (event) {\r\n          this.kpiDataItem = event.args.row;\r\n       // console.log(event.args.row);\r\n      //  this.updateValues(event.args.row,event.args.row.uid);\r\n\r\n      },\r\n      \r\n      addRecord() {\r\n        console.log(\"add pressed\");\r\n       // this.$refs.grid.addrow(1,{\"tagName\": \"Tag Aa\",\r\n        //                    \"currentValue\":110,\r\n        //                    \"monday\":101,\r\n        //                    \"tuesday\":10,\r\n        //                    \"wednesday\":10,\r\n        //                    \"thursday\":10,\r\n         ///                   \"friday\":10,\r\n         //                   \"saturday\":10,\r\n         //                   \"sunday\":10});\r\n         //this.$refs.rid.addrow(1,{});\r\n        //this.addValues(rowData);\r\n        const value = this.$refs.grid.getrows();\r\n        var rowCount = value.length;\r\n        const newWeek = {  \"id\": rowCount,\r\n                            \"tagName\": \"Tag Aa\",\r\n                            \"currentValue\":110,\r\n                            \"monday\":101,\r\n                            \"tuesday\":10,\r\n                            \"wednesday\":10,\r\n                            \"thursday\":10,\r\n                            \"friday\":10,\r\n                            \"saturday\":10,\r\n                            \"sunday\":10};\r\n\r\n        console.log(newWeek);\r\n        this.addValues(newWeek);\r\n        this.refreshItems();\r\n        //console.log(this.$refs.grid.getrowdata(0));\r\n      },\r\n      deleteRecord() {\r\n        console.log(\"delete pressed\");\r\n        const rowIndex = this.$refs.grid.getselectedrowindex();\r\n        const rowData = this.$refs.grid.getrowdata(rowIndex);\r\n        \r\n        this.deleteValues(rowData, rowIndex);\r\n      },\r\n      onCellvaluechanged: function (event) {\r\n        console.log(event.args);\r\n        console.log(this.kpiDataItem);\r\n      //  alert('do something...');\r\n        this.updateValuesCell(this.kpiDataItem,this.kpiDataItem.uid);\r\n      },\r\n      refreshItems() {\r\n      //  console.log(\"aaa\");\r\n        this.$refs.grid.updatebounddata();\r\n        console.log(\"ddd\");\r\n        \r\n      },\r\n      async updateValuesCell(week,id){\r\n        \r\n        const res = await fetch(`http://localhost:5000/api/kpvitem/${id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            //mode: 'no-cors',\r\n            body: JSON.stringify(week)\r\n        })\r\n        console.log(\"asdf\");\r\n        //const data = await res.json()\r\n        const data = await res.json();\r\n        //this.source = data.source;\r\n        console.log(data);\r\n       //this.source = {...this.source}\r\n    },\r\n        async loadItems() {\r\n      //  const res =   await fetch('http://localhost:5000/api/kpvitem');\r\n       // const data =  await res.json()\r\n      //  this.source = data;\r\n       // this.kpiDataItem = await data\r\n      // console.log(this.kpiDataItem[0])\r\n        this.source = {      \r\n        datatype: 'json',\r\n        datafields: [\r\n          { name: 'tagName', type: 'string' },\r\n          { name: 'currentValue', type: 'float' },\r\n          { name: 'monday', type: 'float' },\r\n          { name: 'tuesday', type: 'float' },\r\n          { name: 'wednesday', type: 'float' },\r\n          { name: 'thursday', type: 'float'},\r\n          { name: 'friday', type: 'float'},\r\n          { name: 'saturday', type: 'float'},\r\n          { name: 'sunday', type: 'float'}\r\n        ],\r\n        url: 'http://localhost:5000/api/kpvitem',\r\n       // root: 'data',\r\n\r\n        contenttype: 'application/json',\r\n       // root: 'data',\r\n       //type: 'GET',\r\n        \r\n      };\r\n      \r\n        return this.source;\r\n    },\r\n      async fetchTask(id) {\r\n        const res = await fetch(`http://localhost:5000/api/kpvitem/${id}`);\r\n        const data = await res.json()\r\n\r\n        return data\r\n      },\r\n\r\n      async updateValues(week,id){\r\n        const res = await fetch(`http://localhost:5000/api/kpvitem/${id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            //mode: 'no-cors',\r\n            body: JSON.stringify(week)\r\n        })\r\n        console.log(\"zzz\");\r\n        //const data = await res.json()\r\n        const data = await res.json();\r\n        //this.source = data.source;\r\n        console.log(data);\r\n       //this.source = {...this.source}\r\n    },\r\n    async addValues(week){\r\n        const res = await fetch(`http://localhost:5000/api/kpvitem`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            //mode: 'no-cors',\r\n            body: JSON.stringify(week)\r\n        })\r\n        console.log(\"aadddd\");\r\n        //const data = await res.json()\r\n        const data = await res.json();\r\n        //this.source = data.source;\r\n        console.log(data);\r\n       //this.source = {...this.source}\r\n    },\r\n    async deleteValues(week,id){\r\n        const res = await fetch(`http://localhost:5000/api/kpvitem/${id}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            //mode: 'no-cors',\r\n            body: JSON.stringify(week)\r\n        })\r\n        console.log(\"delete\");\r\n        //const data = await res.json()\r\n        const data = await res.json();\r\n        //this.source = data.source;\r\n        console.log(data);\r\n       //this.source = {...this.source}\r\n    },\r\n  }\r\n}\r\n",{"version":3,"sources":["kpvItem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"kpvItem.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div>\r\n      \r\n      <div>\r\n        <JqxGrid ref=\"grid\" :width=\"940\" :autoheight=\"true\" @cellendedit=\"onCellendedit($event)\" \r\n        :theme=\"'bootstrap'\" :editable=\"true\" @cellvaluechanged=\"onCellvaluechanged($event)\"\r\n        :source=\"dataAdapter\" :columns=\"columns\" :altrows=\"true\" />\r\n      </div>\r\n      <div>        \r\n          <JqxButton @click=\"refreshItems\" :template=\"'success'\" :width=\"80\" \r\n          style=\"float: left; margin-left: 4px; margin-top: 10px\">Refresh</JqxButton>\r\n      </div>\r\n      <div>\r\n          <JqxButton :template=\"'warning'\" :width=\"80\" @click=\"deleteRecord()\"\r\n          style=\"float: left; margin-left: 4px; margin-top: 10px\">Delete</JqxButton>\r\n        \r\n      </div>\r\n      <div>\r\n        <JqxButton v-on:click= \"addRecord()\" :template=\"'primary'\" :width=\"80\" \r\n        style=\"float: left; margin-left: 4px; \r\n         margin-top: 10px\">Add</JqxButton>\r\n      \r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport JqxButton from 'jqwidgets-scripts/jqwidgets-vue/vue_jqxbuttons.vue';\r\n import JqxGrid from \"jqwidgets-scripts/jqwidgets-vue/vue_jqxgrid.vue\";\r\nexport default {\r\n  data() {\r\n    return {\r\n        kpiDataItem: [],\r\n       dataAdapter: new jqx.dataAdapter(this.source,{\r\n    loadComplete: function (data) {\r\n        console.log('data is loaded.')\r\n       // data = data;\r\n         console.log(data); \r\n         \r\n       return data;   \r\n    },   \r\n    loadError: function (xhr, status, error) {\r\n        console.log('data is not loaded.')\r\n    }}),\r\n        columns: [\r\n          { text: 'Tag Name', datafield: 'tagName', width: 140, validation: (cell, value) => {\r\n               {\r\n                return { result: true, message: '' };\r\n              }\r\n              return true;}, },\r\n          { text: 'CurrentValue', datafield: 'currentValue', width: 100 , validation: (cell, value) => {\r\n               if (value < 0 || value > 150) {\r\n                  return { result: false, message: 'Value should be in the 0-150 interval' };\r\n                }\r\n                return true;},},\r\n          { text: 'Monday', datafield: 'monday', width: 100, validation: (cell, value) => {\r\n              if (value < 0 || value > 150) {\r\n                return { result: false, message: 'Value should be in the 0-150 interval' };\r\n              }\r\n              return true;},},\r\n          { text: 'Tuesday', datafield: 'tuesday', width: 100, validation: (cell, value) => {\r\n              if (value < 0 || value > 150) {\r\n                  return { result: false, message: 'Value should be in the 0-150 interval' };\r\n                }\r\n                return true;\r\n              },\r\n          },\r\n          { text: 'Wednesday', datafield: 'wednesday', width: 100, validation: (cell, value) => {\r\n              if (value < 0 || value > 150) {\r\n                return { result: false, message: 'Value should be in the 0-150 interval' };\r\n              }\r\n              return true;},},\r\n          { text: 'Thursday', datafield: 'thursday', width: 100, validation: (cell, value) => {\r\n              if (value < 0 || value > 150) {\r\n                return { result: false, message: 'Value should be in the 0-150 interval' };\r\n              }\r\n              return true;},},\r\n          { text: 'Friday', datafield: 'friday', width: 100, validation: (cell, value) => {\r\n              if (value < 0 || value > 150) {\r\n                return { result: false, message: 'Value should be in the 0-150 interval' };\r\n              }\r\n              return true;},},\r\n          { text: 'Saturday', datafield: 'saturday', width: 100, validation: (cell, value) => {\r\n              if (value < 0 || value > 150) {\r\n                return { result: false, message: 'Value should be in the 0-150 interval' };\r\n              }\r\n              return true;},},\r\n          { text: 'Sunday', datafield: 'sunday', width: 100, validation: (cell, value) => {\r\n              if (value < 0 || value > 150) {\r\n                return { result: false, message: 'Value should be in the 0-150 interval' };\r\n              }\r\n              return true;},},\r\n        ],\r\n    }\r\n  },\r\n  \r\n  async beforeCreate() {\r\n\r\n     // this. source1 =  this.loadItems();\r\n      this.source = {      \r\n        datatype: 'json',\r\n        datafields: [\r\n          { name: 'tagName', type: 'string' },\r\n          { name: 'currentValue', type: 'float' },\r\n          { name: 'monday', type: 'float' },\r\n          { name: 'tuesday', type: 'float' },\r\n          { name: 'wednesday', type: 'float' },\r\n          { name: 'thursday', type: 'float'},\r\n          { name: 'friday', type: 'float'},\r\n          { name: 'saturday', type: 'float'},\r\n          { name: 'sunday', type: 'float'}\r\n        ],\r\n        url: 'http://localhost:5000/api/kpvitem',\r\n       // root: 'data',\r\n\r\n        contenttype: 'application/json',\r\n       // root: 'data',\r\n       //type: 'GET',\r\n        \r\n      };\r\n    },\r\n   components: {\r\n      JqxGrid,JqxButton,\r\n    },\r\n    methods: {\r\n        onCellendedit: function (event) {\r\n          this.kpiDataItem = event.args.row;\r\n       // console.log(event.args.row);\r\n      //  this.updateValues(event.args.row,event.args.row.uid);\r\n\r\n      },\r\n      \r\n      addRecord() {\r\n        console.log(\"add pressed\");\r\n       // this.$refs.grid.addrow(1,{\"tagName\": \"Tag Aa\",\r\n        //                    \"currentValue\":110,\r\n        //                    \"monday\":101,\r\n        //                    \"tuesday\":10,\r\n        //                    \"wednesday\":10,\r\n        //                    \"thursday\":10,\r\n         ///                   \"friday\":10,\r\n         //                   \"saturday\":10,\r\n         //                   \"sunday\":10});\r\n         //this.$refs.rid.addrow(1,{});\r\n        //this.addValues(rowData);\r\n        const value = this.$refs.grid.getrows();\r\n        var rowCount = value.length;\r\n        const newWeek = {  \"id\": rowCount,\r\n                            \"tagName\": \"Tag Aa\",\r\n                            \"currentValue\":110,\r\n                            \"monday\":101,\r\n                            \"tuesday\":10,\r\n                            \"wednesday\":10,\r\n                            \"thursday\":10,\r\n                            \"friday\":10,\r\n                            \"saturday\":10,\r\n                            \"sunday\":10};\r\n\r\n        console.log(newWeek);\r\n        this.addValues(newWeek);\r\n        this.refreshItems();\r\n        //console.log(this.$refs.grid.getrowdata(0));\r\n      },\r\n      deleteRecord() {\r\n        console.log(\"delete pressed\");\r\n        const rowIndex = this.$refs.grid.getselectedrowindex();\r\n        const rowData = this.$refs.grid.getrowdata(rowIndex);\r\n        \r\n        this.deleteValues(rowData, rowIndex);\r\n      },\r\n      onCellvaluechanged: function (event) {\r\n        console.log(event.args);\r\n        console.log(this.kpiDataItem);\r\n      //  alert('do something...');\r\n        this.updateValuesCell(this.kpiDataItem,this.kpiDataItem.uid);\r\n      },\r\n      refreshItems() {\r\n      //  console.log(\"aaa\");\r\n        this.$refs.grid.updatebounddata();\r\n        console.log(\"ddd\");\r\n        \r\n      },\r\n      async updateValuesCell(week,id){\r\n        \r\n        const res = await fetch(`http://localhost:5000/api/kpvitem/${id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            //mode: 'no-cors',\r\n            body: JSON.stringify(week)\r\n        })\r\n        console.log(\"asdf\");\r\n        //const data = await res.json()\r\n        const data = await res.json();\r\n        //this.source = data.source;\r\n        console.log(data);\r\n       //this.source = {...this.source}\r\n    },\r\n        async loadItems() {\r\n      //  const res =   await fetch('http://localhost:5000/api/kpvitem');\r\n       // const data =  await res.json()\r\n      //  this.source = data;\r\n       // this.kpiDataItem = await data\r\n      // console.log(this.kpiDataItem[0])\r\n        this.source = {      \r\n        datatype: 'json',\r\n        datafields: [\r\n          { name: 'tagName', type: 'string' },\r\n          { name: 'currentValue', type: 'float' },\r\n          { name: 'monday', type: 'float' },\r\n          { name: 'tuesday', type: 'float' },\r\n          { name: 'wednesday', type: 'float' },\r\n          { name: 'thursday', type: 'float'},\r\n          { name: 'friday', type: 'float'},\r\n          { name: 'saturday', type: 'float'},\r\n          { name: 'sunday', type: 'float'}\r\n        ],\r\n        url: 'http://localhost:5000/api/kpvitem',\r\n       // root: 'data',\r\n\r\n        contenttype: 'application/json',\r\n       // root: 'data',\r\n       //type: 'GET',\r\n        \r\n      };\r\n      \r\n        return this.source;\r\n    },\r\n      async fetchTask(id) {\r\n        const res = await fetch(`http://localhost:5000/api/kpvitem/${id}`);\r\n        const data = await res.json()\r\n\r\n        return data\r\n      },\r\n\r\n      async updateValues(week,id){\r\n        const res = await fetch(`http://localhost:5000/api/kpvitem/${id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            //mode: 'no-cors',\r\n            body: JSON.stringify(week)\r\n        })\r\n        console.log(\"zzz\");\r\n        //const data = await res.json()\r\n        const data = await res.json();\r\n        //this.source = data.source;\r\n        console.log(data);\r\n       //this.source = {...this.source}\r\n    },\r\n    async addValues(week){\r\n        const res = await fetch(`http://localhost:5000/api/kpvitem`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            //mode: 'no-cors',\r\n            body: JSON.stringify(week)\r\n        })\r\n        console.log(\"aadddd\");\r\n        //const data = await res.json()\r\n        const data = await res.json();\r\n        //this.source = data.source;\r\n        console.log(data);\r\n       //this.source = {...this.source}\r\n    },\r\n    async deleteValues(week,id){\r\n        const res = await fetch(`http://localhost:5000/api/kpvitem/${id}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            //mode: 'no-cors',\r\n            body: JSON.stringify(week)\r\n        })\r\n        console.log(\"delete\");\r\n        //const data = await res.json()\r\n        const data = await res.json();\r\n        //this.source = data.source;\r\n        console.log(data);\r\n       //this.source = {...this.source}\r\n    },\r\n  }\r\n}\r\n</script>\r\n<style src='../assets/styles/jqwidgets/jqx.base.css'></style>\r\n<style src='../assets/styles/jqwidgets/jqx.bootstrap.css'></style>"]}]}